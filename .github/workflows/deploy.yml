name: Build and Release DMG

on:
  push:
    branches: [main]
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [main]

# Sets permissions of the GITHUB_TOKEN to allow creating releases
permissions:
  contents: write

jobs:
  build-dmg:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pyinstaller dmgbuild

      - name: Build App Bundle with PyInstaller
        run: |
          # ※コード署名を行いたい場合は、--codesign-identity オプションなどを付与する
          pyinstaller --windowed --name "MyApp" main.py

      - name: Verify app bundle exists
        run: |
          ls -l dist/

      - name: Create DMG with dmgbuild
        run: |
          # dmgbuild の設定ファイル (settings.py) はリポジトリルートに配置済みであることを前提とします。
          dmgbuild -s settings.py "My App" MyApp.dmg

      - name: Display DMG Info
        run: |
          echo "DMG file created successfully at $(pwd)/MyApp.dmg"
          echo "File size: $(du -h MyApp.dmg | cut -f1)"

      # Create a release when a tag is pushed
      - name: Create Release for Tags
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "MyApp.dmg"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false
          generateReleaseNotes: true

      # For non-tag pushes to main, create an automatic release
      - name: Create Automatic Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: create_auto_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "MyApp.dmg"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "latest"
          name: "Latest Build"
          body: "Automatic build from the latest commit on the main branch. Created on $(date)."
          allowUpdates: true
          makeLatest: true

      # We're not using upload-artifact since we're already making the DMG available through GitHub Releases
